[project]
name = "movie-ranker"
version = "0.1.0"
description = "A tool to rank and analyze movies using various data sources"
authors = [
    {name = "Geektimus", email = "2871733+geektimus@users.noreply.github.com"}
]
dependencies = [
    "fastparquet==2024.5.0",
    "hurry.filesize==0.9",
    "jinja2==3.1.4",
    "jupyterlab==4.3.0",
    "numpy==2.1.2",
    "omdbapi==0.7.0",
    "pandas==2.2.3",
    "pyarrow==18.0.0",
    "pyspark==3.5.3",
    "python-decouple==3.8",
    "python-dotenv==1.0.1",
    "requests==2.32.3",
    "tabulate==0.9.0",
]
requires-python = ">=3.8"
readme = "README.md"
license = {file = "LICENSE"}

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["movie_ranker"]

[tool.setuptools.package-data]
movie_ranker = ["data/*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=movie_ranker --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
    "conftest.py",
] 